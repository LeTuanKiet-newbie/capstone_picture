generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model comments {
  comment_id          Int      @id @default(autoincrement())
  user_id             Int?
  img_id              Int?
  content             String   @db.VarChar(255)
  comment_create_date DateTime @db.Timestamp(0)
  users               users?   @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "comments_ibfk_1")
  images              images?  @relation(fields: [img_id], references: [img_id], onDelete: NoAction, onUpdate: NoAction, map: "comments_ibfk_2")

  @@index([img_id], map: "img_id")
  @@index([user_id], map: "user_id")
}

model images {
  img_id          Int          @id @default(autoincrement())
  user_id         Int?
  img_create_date DateTime     @db.Timestamp(0)
  img_title       String?      @db.VarChar(255)
  img_url         String       @db.VarChar(255)
  img_description String       @db.VarChar(255)
  comments        comments[]
  users           users?       @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "images_ibfk_1")
  save_image      save_image[]

  @@index([user_id], map: "user_id")
}

model save_image {
  save_img_id   Int      @id @default(autoincrement())
  save_img_date DateTime @db.Timestamp(0)
  img_id        Int?
  user_id       Int?
  users         users?   @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "save_image_ibfk_1")
  images        images?  @relation(fields: [img_id], references: [img_id], onDelete: NoAction, onUpdate: NoAction, map: "save_image_ibfk_2")

  @@index([img_id], map: "img_id")
  @@index([user_id], map: "user_id")
}

model users {
  user_id       Int          @id @default(autoincrement())
  user_fullname String       @db.VarChar(100)
  user_email    String       @db.VarChar(150)
  user_phone    String       @db.VarChar(150)
  age           Int
  user_password String       @db.VarChar(150)
  user_avatar   String       @db.VarChar(255)
  user_role     String       @default(dbgenerated("(_utf8mb4\\'user\\')")) @db.VarChar(50)
  comments      comments[]
  images        images[]
  save_image    save_image[]
}
